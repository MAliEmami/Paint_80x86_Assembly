PRINT_A_CHAR MACRO CHAR
		 MOV AH,09H
		 MOV BX,0
		 MOV AL,CHAR
		 MOV CX,1
		 MOV BL,0FFH
		 INT 10H
ENDM
PRINT MACRO ROW, COLUMN

		  SET_CURSOR ROW,COLUMN
		  PRINT_A_CHAR 'C'
		  SET_CURSOR ROW,COLUMN+1
		  PRINT_A_CHAR 'o'
		  SET_CURSOR ROW,COLUMN+2
		  PRINT_A_CHAR 'l'
		  SET_CURSOR ROW,COLUMN+3
		  PRINT_A_CHAR 'o'
		  SET_CURSOR ROW,COLUMN+4
		  PRINT_A_CHAR 'r'
ENDM
;____________________________________________________________________________
FILL MACRO   COLOR, START_COL , START_ROW , END_COL , END_ROW
	          LOCAL       COL_LOOP, ROW_LOOP
	          MOV         CX, START_COL
	COL_LOOP: 
	          MOV         DX, START_ROW
	ROW_LOOP: 
	          PAINT_PIXEL COLOR
	          INC         DX
	          CMP         DX, END_ROW
	          JB          ROW_LOOP

	          INC         CX
	          CMP         CX, END_COL
	          JB          COL_LOOP
ENDM
;____________________________________________________________________________
ERASE MACRO
	      PAINT_PIXEL WHITE
	      DEC         CX
	      PAINT_PIXEL WHITE
	      DEC         DX
	      PAINT_PIXEL WHITE
	      INC         CX
	      PAINT_PIXEL WHITE
	      INC         CX
	      PAINT_PIXEL WHITE
	      INC         DX
	      PAINT_PIXEL WHITE
	      INC         DX
	      PAINT_PIXEL WHITE
	      DEC         CX
	      PAINT_PIXEL WHITE
	      DEC         CX
	      PAINT_PIXEL WHITE
ENDM
;____________________________________________________________________________
PAINT_PIXEL MACRO COLOR
	            MOV AH,0CH
	            MOV AL,COLOR
	            INT 10H
ENDM
;____________________________________________________________________________
SET_BACKGROUND_WHITE MACRO
				 MOV AX,0600H
	             MOV BH,WHITE
				 MOV CX,0
				 MOV DH,59
	             MOV DL,79
	             INT 10H
ENDM
;____________________________________________________________________________
SET_COLOR MACRO
	                LOCAL SET_BLACK, SET_BLUE, SET_CYAN, SET_GREEN,SET_LIGHT_GREEN, SET_RED, SET_MAGENTA, SET_YELLOW, END_CHOOSE

	                CMP   DX, COLOR_MARGIN + COLOR_SIZE
	                JA    END_CHOOSE
	                CMP   DX, COLOR_MARGIN
	                JB    END_CHOOSE
	                CMP   CX, COLOR_MARGIN
	                JB    END_CHOOSE
	                CMP   CX, BLACK_COL + COLOR_MARGIN + COLOR_SIZE
	                JB    SET_BLACK
	                CMP   CX, BLUE_COL + COLOR_MARGIN + COLOR_SIZE
	                JB    SET_BLUE
	                CMP   CX, CYAN_COL + COLOR_MARGIN + COLOR_SIZE
	                JB    SET_CYAN
	                CMP   CX, GREEN_COL + COLOR_MARGIN + COLOR_SIZE
	                JB    SET_GREEN
	                CMP   CX, LIGHT_GREEN_COL + COLOR_MARGIN + COLOR_SIZE
	                JB    SET_LIGHT_GREEN
	                CMP   CX, RED_COL + COLOR_MARGIN + COLOR_SIZE
	                JB    SET_RED
	                CMP   CX, MAGENTA_COL + COLOR_MARGIN + COLOR_SIZE
	                JB    SET_MAGENTA
	                CMP   CX, YELLOW_COL + COLOR_MARGIN + COLOR_SIZE
	                JB    SET_YELLOW
	                JMP   END_CHOOSE
				
	SET_BLACK:      
	                MOV   PENCIL, BLACK
	                JMP   END_CHOOSE
	SET_BLUE:       
	                MOV   PENCIL, BLUE
	                JMP   END_CHOOSE
	SET_CYAN:       
	                MOV   PENCIL, CYAN
	                JMP   END_CHOOSE
	SET_GREEN:      
	                MOV   PENCIL, GREEN
	                JMP   END_CHOOSE
	SET_LIGHT_GREEN:
	                MOV   PENCIL, LIGHT_GREEN
	                JMP   END_CHOOSE
	SET_RED:        
	                MOV   PENCIL, RED
	                JMP   END_CHOOSE
	SET_MAGENTA:    
	                MOV   PENCIL, MAGENTA
	                JMP   END_CHOOSE
	SET_YELLOW:     
	                MOV   PENCIL, YELLOW
	                JMP   END_CHOOSE
	END_CHOOSE:     
ENDM
;____________________________________________________________________________
SET_CURSOR MACRO	ROW, COL
	           MOV DH, ROW
	           MOV DL, COL
	           MOV BH, 0
	           MOV AH, 2
	           INT 10H
ENDM
;____________________________________________________________________________
WAIT_FOR_KEY_PRESS MACRO
	           MOV AH,01
	           INT 16H
ENDM
;____________________________________________________________________________
SET_VIDEO_MODE MACRO	MODE
	               MOV AH,00H 	;Set new video mode
	               MOV AL,MODE
	               INT 10H
ENDM
GET_OLD_VIDEO_MODE MACRO
	                   MOV AH,0FH       	;Get the current video mode
	                   INT 10H
	                   MOV [OLDVIDEO],AL	;Save it
ENDM
CLEAR_SCREEN MACRO
	             MOV AX,0600H	;Clear screen
	             MOV BH,WHITE
				 MOV CH,COLOR_MARGIN + COLOR_SIZE + BAR_LINE_MARGIN + 1
				 SHR CH,1
				 SHR CH,1
				 SHR CH,1
				 SHR CH,1
	             MOV CL,0
				 MOV DH,59
	             MOV DL,79
	             INT 10H
ENDM
;____________________________________________________________________________
INITIAL_MOUSE MACRO
	              MOV AX,0000H	;Initialize mouse
	              INT 33H
ENDM
SHOW_MOUSE_CURSOR MACRO
	                  MOV AX,01H	;Show mouse cursor
	                  INT 33H
ENDM
HIDE_MOUSE MACRO
				MOV AH,02H
				INT 33H
ENDM
MOUSE_STATUS MACRO
	             MOV AX,03H	;check for mouse button event
	             INT 33H
ENDM
; CHECK_LEFT_CLICK_PRESS	MACRO
						; LOCAL BACK
						; BACK: MOV AX,03H ;check for mouse button press
						; INT 33H
						; MOV [X1],CX
						; MOV [Y1],DX
						; CMP BX,0001H
						; JNE BACK
; ENDM
CHECK_LEFT_CLICK_RELEASE MACRO
	                         LOCAL BACK
	BACK:                    MOV   AX,03H  	;check for mouse button release
	                         INT   33H
	                         MOV   [X2],CX
	                         MOV   [Y2],DX
	                         CMP   BX,0000H
	                         JNE   BACK
ENDM
;____________________________________________________________________________
PLOT_LOW MACRO X_1,Y_1,X_2,Y_2
	         LOCAL NEXT,AGAIN,G,EXIT,L1
	         MOV   BX,0
	         MOV   SI,X_2
	         SUB   SI,X_1
	         MOV   DI,Y_2
	         SUB   DI,Y_1
	         MOV   [Yi],1
	         CMP   DI,0
	         JGE   NEXT
	         NOT   [Yi]
	         INC   [Yi]
	         NOT   DI
	         INC   DI
	;NEG DI
	NEXT:    
	         SHL   DI,1
	         MOV   [SLOPE_ERROR],DI
	         SUB   [SLOPE_ERROR],SI
	         MOV   DX,Y_1
	         MOV   CX,X_1
	AGAIN:   
	;PAINT_PIXEL	PENCIL
	         MOV   AH,0CH
	         MOV   AL,PENCIL
	         INT   10H
	         CMP   [SLOPE_ERROR],0
	         JG    G
	         ADD   [SLOPE_ERROR],DI
	         JMP   L1
	G:       
	         ADD   DX,[Yi]
	         MOV   AX,DI
	         SHL   SI,1
	         SUB   AX,SI
	         SHR   SI,1
	         ADD   [SLOPE_ERROR],AX
	L1:      
	         CMP   CX,X_2
	         JE    EXIT
	         INC   CX
	         JMP   AGAIN
	EXIT:    
ENDM
PLOT_HIGH MACRO X_1,Y_1,X_2,Y_2
	          LOCAL NEXT,AGAIN,G,EXIT,L1
	          MOV   BX,0
	          MOV   SI,X_2
	          SUB   SI,X_1
	          MOV   DI,Y_2
	          SUB   DI,Y_1
	          MOV   [Xi],1
	          CMP   SI,0
	          JGE   NEXT
	          NOT   [Xi]
	          INC   [Xi]
	          NOT   SI
	          INC   SI
			
	;NEG [Xi]
	;NEG SI
	NEXT:     
	          SHL   SI,1
	          MOV   [SLOPE_ERROR],SI
	          SUB   [SLOPE_ERROR],DI
	          MOV   DX,Y_1
	          MOV   CX,X_1
	AGAIN:    
	;PAINT_PIXEL PENCIL
	          MOV   AH,0CH
	          MOV   AL,PENCIL
	          INT   10H
	          CMP   [SLOPE_ERROR],0
	          JG    G
	          ADD   [SLOPE_ERROR],SI
	          JMP   L1
	G:        
	          ADD   CX,[Xi]
	          MOV   AX,SI
	          SHL   DI,1
	          SUB   AX,DI
	          SHR   DI,1
	          ADD   [SLOPE_ERROR],AX
	L1:       
	          CMP   DX,Y_2
	          JE    EXIT
	          INC   DX
	          JMP   AGAIN
	EXIT:     
ENDM
DRAW_LINE MACRO
	              LOCAL     COMPARE,NEXT,HIGH_PLOT,NO_SWAPP_LOW,NO_SWAPP_HIGH,EXIT
	              MOV       DI,[Y2]
	              SUB       DI,[Y1]
	              JNC       NEXT
	              NOT       DI
	              INC       DI
	NEXT:         
	              MOV       SI,[X2]
	              SUB       SI,[X1]
	              JNC       COMPARE
	              NOT       SI
	              INC       SI
	COMPARE:      
	              CMP       DI,SI
	              JGE       HIGH_PLOT
	              MOV       BX,[X1]
	              CMP       BX,[X2]
	              JLE       NO_SWAPP_LOW
	              PLOT_LOW  [X2],[Y2],[X1],[Y1]
	              JMP       EXIT
	NO_SWAPP_LOW: 
	              PLOT_LOW  [X1],[Y1],[X2],[Y2]
	              JMP       EXIT
	HIGH_PLOT:    
	              MOV       BX,[Y1]
	              CMP       BX,[Y2]
	              JLE       NO_SWAPP_HIGH
	              PLOT_HIGH [X2],[Y2],[X1],[Y1]
	              JMP       EXIT
	NO_SWAPP_HIGH:
	              PLOT_HIGH [X1],[Y1],[X2],[Y2]
	EXIT:         
ENDM